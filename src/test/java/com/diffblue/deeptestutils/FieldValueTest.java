package com.diffblue.deeptestutils;

import org.junit.Assert;
import org.junit.rules.ExpectedException;
import org.junit.Test;

import java.lang.reflect.Array;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

import com.diffblue.deeptestutils.CompareWithFieldList;
import com.diffblue.deeptestutils.Reflector;

public class FieldValueTest {

  @org.junit.Rule
  public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: FieldValue */


  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_diffblue_deeptestutils_FieldValue__init__000_d8646fc1af90ecd3() throws Throwable {

    Object instance;
    {
      /* Arrange */
      String pname = null;
      Object pvalue = null;

      /* Act */
      /* Creating object to test constructor */
      Class<?> c = Reflector.forName("com.diffblue.deeptestutils.FieldValue");
      Constructor<?> ctor = c.getDeclaredConstructor(Reflector.forName("java.lang.String"), Reflector.forName("java.lang.Object"));
      ctor.setAccessible(true);
      instance = ctor.newInstance(pname, pvalue);

      /* Method return type is void, or not expected to return */
    }
  }
}
