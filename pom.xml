<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.diffblue</groupId>
  <artifactId>deeptestutils</artifactId>
  <version>0.0.1</version>
  <packaging>jar</packaging>

  <name>Deeptest-utils</name>
  <!-- part of maven central requirements is to provide sufficient metadata   -->
  <!-- @todo review description -->
  <description>dependency for diffblue deeptest</description>
  <!-- @todo review url -->
  <url>https://github.com/diffblue/deeptest-utils</url> 

  <!-- must declare the license(s) used for distributing your components. -->
  <!-- @todo review license - apache vs MIT vs... -->
  <licenses>
    <license>
      <name>BSD-4-Clause-License</name>
      <url>https://spdx.org/licenses/BSD-4-Clause.html</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <!-- In order to be able to associate the project it is required to add a developers section. -->
  <!-- @todo - review this section -->
  <developers>
    <developer>
      <name>DiffBlue</name>
      <email>info@diffblue.com</email>
      <organization>diffblue</organization>
      <organizationUrl>http://www.diffblue.com</organizationUrl>
    </developer>
  </developers>
  <!-- if using the maven-release plugin: -->
  <!-- http://central.sonatype.org/pages/apache-maven.html#performing-a-release-deployment-with-the-maven-release-plugin -->
  <!-- then the connection to source control system is required.  -->
  <scm>
    <url>https://github.com/diffblue/deeptest-utils</url>
    <!-- @todo review this - why needed a 'connection' vs 'developerConnection -->
    <developerConnection>scm:git:git@github.com:diffblue/deeptest-utils.git</developerConnection>
  </scm>
  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id><!-- nb this must be the same as the 'id' field in 'settings.xml' -->
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <!-- BELOW NOT REQUIRED WHEN USING 'NEXUS staging plugin' -->
    <!-- <repository> -->
    <!--   <id>ossrh</id> -->
    <!--   <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url> -->
    <!-- </repository> -->
  </distributionManagement>
  <dependencies>
    <dependency>
      <groupId>org.javassist</groupId>
      <artifactId>javassist</artifactId>
      <version>3.21.0-GA</version>
    </dependency>
    <dependency>
      <groupId>org.objenesis</groupId>
      <artifactId>objenesis</artifactId>
      <version>2.5.1</version>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito</artifactId>
      <version>1.6.6</version>
    </dependency>
  </dependencies>
  <!-- this profile gpg signs the artifacts -->
  <profiles>
    <profile>
      <id>sign</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.6</version> <!-- current stable -->
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- this profile supplies the 'javadocs and buildsources' part of the maven central requirements -->
    <profile>
      <id>build-extras</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <!-- official http://central.sonatype.org/pages/apache-maven.html#performing-a-release-deployment-with-the-maven-release-plugin -->
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>2.2.1</version> <!-- @todo review version of plugin, is 2.4.x out? -->
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>2.9.1</version> <!-- @todo review version of plugin, is 2.10.x out -->
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>stdbuild</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <version>2.17</version>
            <executions>
              <execution>
                <id>validate</id>
                <phase>validate</phase>
                <configuration>
                  <configLocation>sun_checks.xml</configLocation>
                  <encoding>UTF-8</encoding>
                  <consoleOutput>true</consoleOutput>
                  <violationSeverity>warning</violationSeverity>
                  <linkXRef>false</linkXRef>
                </configuration>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.1</version>
            <configuration>
              <source>1.8</source>
              <target>1.8</target>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>3.0.0</version>
            <configuration>
              <show>private</show>
              <nohelp>true</nohelp>
            </configuration>
          </plugin>
          <plugin>  <!-- NEXUS staging plugin - vs  -->
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>1.6.8</version> 
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>  <!-- nb this must be the same as the 'id' field in 'settings.xml' -->
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <!-- http://central.sonatype.org/pages/apache-maven.html#nexus-staging-maven-plugin-for-deployment-and-release -->
              <!-- With the property autoReleaseAfterClose set to false you can manually -->
              <!-- inspect the staging repository in the Nexus Repository Manager and trigger a -->
              <!-- release of the staging repository later with mvn nexus-staging:release -->
              <autoReleaseAfterClose>false</autoReleaseAfterClose> 
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

</project>
