package com.diffblue.deeptestutils;

import org.junit.Assert;
import org.junit.rules.ExpectedException;
import org.junit.Test;

import java.lang.reflect.Array;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

import com.diffblue.deeptestutils.CompareWithFieldList;
import com.diffblue.deeptestutils.Reflector;

public class IterAnswerTest {

  @org.junit.Rule
  public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: IterAnswer */


  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   * conditional line 16 branch to line 16
   */

  @org.junit.Test
  public void com_diffblue_deeptestutils_IterAnswer__clinit__000_47419aa8eef2980a() throws Throwable {

    Object constructed;
    {
      /* Arrange */

      /* Act */
      /* Using constructor to test static initializer */
      constructed = Reflector.getInstance("com.diffblue.deeptestutils.IterAnswer");
      /* Method return type is void, or not expected to return */
    }
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire function.
   */

  @org.junit.Test
  public void com_diffblue_deeptestutils_IterAnswer__init__000_8a9070a04abc160d() throws Throwable {

    com.diffblue.deeptestutils.IterAnswer instance;
    {
      /* Arrange */
      String cn = null;
      String mn = null;
      java.util.ArrayList answerList = null;
      java.util.ArrayList<Object []> eps = null;

      /* Act */
      /* Creating object to test constructor */
      instance = new com.diffblue.deeptestutils.IterAnswer(cn, mn, answerList, eps);

      /* Method return type is void, or not expected to return */
    }
  }
}
